services:
  # Spanner エミュレータ
  spanner-emulator:
    image: gcr.io/cloud-spanner-emulator/emulator:1.5.22
    ports:
      - "9010:9010"
      - "9020:9020"

  # Spanner エミュレータ起動後に流すスクリプト
  # 指定したプロジェクトID, インスタンスID, データベースIDのデータベースを作成する
  spanner-emulator-init-script:
    image: google/cloud-sdk
    platform: linux/amd64
    command: >
      bash -c 'gcloud config configurations create emulator;
              gcloud config set auth/disable_credentials true &&
              gcloud config set project $${GCP_PROJECT_ID} &&
              gcloud config set api_endpoint_overrides/spanner $${SPANNER_EMULATOR_URL} --quiet&&
              gcloud spanner instances create $${SPANNER_INSTANCE_ID} --config=emulator-config --description="Test Instance" --nodes=1 &&
              gcloud spanner databases create $${SPANNER_DATABASE_ID} --instance=$${SPANNER_INSTANCE_ID}'
    env_file:
      - local.env
    depends_on:
      - spanner-emulator

  # Spanner エミュレータのヘルスチェック用コンテナ
  spanner-emulator-healthcheck:
    image: curlimages/curl
    depends_on:
      - spanner-emulator
    platform: linux/amd64
    entrypoint: tail -f /dev/null
    env_file:
      - local.env
    healthcheck:
      test: "curl -f http://spanner-emulator:9020/v1/projects/local-project/instances/test-instance/databases/test-database || exit 1"
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 10s

  # GoアプリケーションのAPIサーバ
  api:
    build:
      context: ../../
      dockerfile: ../../build/packages/docker/Dockerfile.sample_app
    ports:
      - "8080:8080"
    env_file:
      - local.env
    tty: true
    depends_on:
      spanner-emulator-healthcheck:
        condition: service_healthy
